name: todo_manager
on:
  push:
    tags:
      - 'v*'
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/todomanager
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render config
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: |
          mkdir deploy
          echo 'DB_NAME'=${{ secrets.DB_NAME }} >> deploy/.env
          echo 'DB_USER'=${{ secrets.DB_USER }} >> deploy/.env
          echo 'DB_PASSWORD'=${{ secrets.DB_PASSWORD }} >> deploy/.env
          echo 'DB_HOST'=${{ secrets.DB_HOST }} >> deploy/.env
          echo 'SECRET_KEY'=${{ secrets.SECRET_KEY }} >> deploy/.env   
          echo 'VK_OAUTH2_SECRET'=${{ secrets.VK_OAUTH2_SECRET }} >> deploy/.env
          echo 'VK_OAUTH2_KEY'=${{ secrets.VK_OAUTH2_KEY }} >> deploy/.env
          echo 'TG_TOKEN'=${{ secrets.TG_TOKEN }} >> deploy/.env
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cp -R ./nginx/ deploy/
      - name: copy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: "todomanager"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd todomanager
            echo 'yes' | python todo_manager/manage.py collectstatic
            docker-compose up -d

